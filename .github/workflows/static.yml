# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 #
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
      - run: npm install
      - name: setup python
        uses: actions/setup-python@v5
      - name: execute copy_dependencies.py
        run: python build_webpage/copy_dependencies.py
      - name: execute csv2geojson.py
        run: python build_webpage/csv2geojson.py
      - name: Move geojsonFeatures.json
        run: mv geojsonFeatures.json webpage/geojsonFeatures.json
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: webpage/
          if-no-files-found: error
          compression-level: 0
  

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
